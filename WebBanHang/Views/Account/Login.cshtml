@using WebBanHang.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title.</h2>
<div class="row d-flex align-items-center justify-content-center p-4">
    <div class="col-md-8 col-lg-7 col-xl-6">
        <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.svg"
             class="img-fluid" alt="Phone image">
    </div>
    <div id="loginForm" class="col-md-7 col-lg-5 col-xl-5 offset-xl-1">
        @{ 
            if(ViewBag.z != null)
            {
                <a>@ViewBag.z</a>
            }
        }
        @TempData["returnUrl"]
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = TempData["returnUrl"] }, FormMethod.Post, new { @class = "", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.EmailOrUsername, new { @class = "form-label" })
                    <div>
                        @Html.TextBoxFor(m => m.EmailOrUsername, new { @class = "form-control form-control-lg" })
                        @Html.ValidationMessageFor(m => m.EmailOrUsername, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "form-label" })
                    <div>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-lg" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>*@

                <div class="d-flex justify-content-around align-items-center my-3">
                    <!-- Checkbox -->
                    <div class="form-check">
                        @Html.CheckBoxFor(m => m.RememberMe, new { @class = "form-check-input" })
                        @Html.LabelFor(m => m.RememberMe, new { @class = "form-check-label" })
                    </div>
                    <a href="#!">Forgot password?</a>
                </div>

                <button type="submit" class="btn btn-primary btn-lg btn-block">Sign in</button>
                @*<p>
                @Html.ActionLink("Register as a new user", "Register")
            </p>*@
                <div class="divider d-flex align-items-center my-2">
                    <p class="text-center fw-bold mx-3 mb-0 text-muted">OR</p>
                </div>

                <a class="btn btn-primary btn-lg btn-block" style="background-color: #3b5998" href="#!"
                   role="button">
                    <i class="fab fa-facebook-f me-2"></i>Continue with Facebook
                </a>
                @* Enable this once you have account confirmation enabled for password reset functionality
            <p>
                @Html.ActionLink("Forgot your password?", "ForgotPassword")
            </p>*@
            }
    </div>
    @*<div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>*@
</div>
